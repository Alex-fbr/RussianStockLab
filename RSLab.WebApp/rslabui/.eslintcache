[{"D:\\VS projects\\RussianStockLab\\RSLab.WebApp\\rslabui\\src\\index.js":"1","D:\\VS projects\\RussianStockLab\\RSLab.WebApp\\rslabui\\src\\store.js":"2","D:\\VS projects\\RussianStockLab\\RSLab.WebApp\\rslabui\\src\\services\\risStoreService.js":"3","D:\\VS projects\\RussianStockLab\\RSLab.WebApp\\rslabui\\src\\services\\configurationService.js":"4","D:\\VS projects\\RussianStockLab\\RSLab.WebApp\\rslabui\\src\\components\\app\\index.js":"5","D:\\VS projects\\RussianStockLab\\RSLab.WebApp\\rslabui\\src\\components\\error-boundry\\index.js":"6","D:\\VS projects\\RussianStockLab\\RSLab.WebApp\\rslabui\\src\\components\\ris-store-service-context\\index.js":"7","D:\\VS projects\\RussianStockLab\\RSLab.WebApp\\rslabui\\src\\helpers\\queryParameterHelper.js":"8","D:\\VS projects\\RussianStockLab\\RSLab.WebApp\\rslabui\\src\\constants\\urlQueryParameterNames.js":"9","D:\\VS projects\\RussianStockLab\\RSLab.WebApp\\rslabui\\src\\constants\\api.js":"10","D:\\VS projects\\RussianStockLab\\RSLab.WebApp\\rslabui\\src\\reducers\\index.js":"11","D:\\VS projects\\RussianStockLab\\RSLab.WebApp\\rslabui\\src\\components\\error-boundry\\error-boundry.js":"12","D:\\VS projects\\RussianStockLab\\RSLab.WebApp\\rslabui\\src\\components\\app\\App.js":"13","D:\\VS projects\\RussianStockLab\\RSLab.WebApp\\rslabui\\src\\components\\ris-store-service-context\\risStoreServiceContext.js":"14","D:\\VS projects\\RussianStockLab\\RSLab.WebApp\\rslabui\\src\\reducers\\risReducer.js":"15","D:\\VS projects\\RussianStockLab\\RSLab.WebApp\\rslabui\\src\\components\\pages\\risPage.js":"16","D:\\VS projects\\RussianStockLab\\RSLab.WebApp\\rslabui\\src\\components\\error-indicator\\index.js":"17","D:\\VS projects\\RussianStockLab\\RSLab.WebApp\\rslabui\\src\\constants\\actionsTypes.js":"18","D:\\VS projects\\RussianStockLab\\RSLab.WebApp\\rslabui\\src\\components\\ris-list\\index.js":"19","D:\\VS projects\\RussianStockLab\\RSLab.WebApp\\rslabui\\src\\components\\error-indicator\\error-indicator.js":"20","D:\\VS projects\\RussianStockLab\\RSLab.WebApp\\rslabui\\src\\components\\ris-list\\risList.js":"21","D:\\VS projects\\RussianStockLab\\RSLab.WebApp\\rslabui\\src\\components\\spinner\\spinner.js":"22","D:\\VS projects\\RussianStockLab\\RSLab.WebApp\\rslabui\\src\\components\\hoc\\index.js":"23","D:\\VS projects\\RussianStockLab\\RSLab.WebApp\\rslabui\\src\\actions\\index.js":"24","D:\\VS projects\\RussianStockLab\\RSLab.WebApp\\rslabui\\src\\constants\\notificationLevels.js":"25","D:\\VS projects\\RussianStockLab\\RSLab.WebApp\\rslabui\\src\\components\\common\\bottomPanel\\bottomPanel.js":"26","D:\\VS projects\\RussianStockLab\\RSLab.WebApp\\rslabui\\src\\components\\common\\focus\\focus.js":"27","D:\\VS projects\\RussianStockLab\\RSLab.WebApp\\rslabui\\src\\components\\common\\placeholder\\placeholder.jsx":"28","D:\\VS projects\\RussianStockLab\\RSLab.WebApp\\rslabui\\src\\components\\common\\acceptButtons\\acceptButtons.jsx":"29","D:\\VS projects\\RussianStockLab\\RSLab.WebApp\\rslabui\\src\\components\\hoc\\withRisStoreService.js":"30","D:\\VS projects\\RussianStockLab\\RSLab.WebApp\\rslabui\\src\\actions\\risActions.js":"31","D:\\VS projects\\RussianStockLab\\RSLab.WebApp\\rslabui\\src\\components\\notification\\NotificationManager.js":"32"},{"size":1093,"mtime":1608295423281,"results":"33","hashOfConfig":"34"},{"size":479,"mtime":1608541706751,"results":"35","hashOfConfig":"34"},{"size":3722,"mtime":1611499093518,"results":"36","hashOfConfig":"34"},{"size":1026,"mtime":1608295423284,"results":"37","hashOfConfig":"34"},{"size":49,"mtime":1607694354441,"results":"38","hashOfConfig":"34"},{"size":77,"mtime":1607694354445,"results":"39","hashOfConfig":"34"},{"size":172,"mtime":1607694354449,"results":"40","hashOfConfig":"34"},{"size":461,"mtime":1609139865774,"results":"41","hashOfConfig":"34"},{"size":98,"mtime":1608562364991,"results":"42","hashOfConfig":"34"},{"size":214,"mtime":1611503630154,"results":"43","hashOfConfig":"34"},{"size":178,"mtime":1607694354452,"results":"44","hashOfConfig":"34"},{"size":395,"mtime":1607694354444,"results":"45","hashOfConfig":"34"},{"size":503,"mtime":1611499908933,"results":"46","hashOfConfig":"34"},{"size":213,"mtime":1607694354449,"results":"47","hashOfConfig":"34"},{"size":8119,"mtime":1611212441183,"results":"48","hashOfConfig":"34"},{"size":151,"mtime":1607694354448,"results":"49","hashOfConfig":"34"},{"size":83,"mtime":1607694354446,"results":"50","hashOfConfig":"34"},{"size":1719,"mtime":1609138309114,"results":"51","hashOfConfig":"34"},{"size":61,"mtime":1607694354448,"results":"52","hashOfConfig":"34"},{"size":162,"mtime":1607694354446,"results":"53","hashOfConfig":"34"},{"size":2827,"mtime":1611503346846,"results":"54","hashOfConfig":"34"},{"size":373,"mtime":1611503781252,"results":"55","hashOfConfig":"34"},{"size":97,"mtime":1607694354447,"results":"56","hashOfConfig":"34"},{"size":29,"mtime":1607694354415,"results":"57","hashOfConfig":"34"},{"size":128,"mtime":1609138309114,"results":"58","hashOfConfig":"34"},{"size":480,"mtime":1607694354443,"results":"59","hashOfConfig":"60"},{"size":264,"mtime":1610350836736,"results":"61","hashOfConfig":"60"},{"size":623,"mtime":1607948243259,"results":"62","hashOfConfig":"60"},{"size":1603,"mtime":1611212441154,"results":"63","hashOfConfig":"60"},{"size":435,"mtime":1607694354447,"results":"64","hashOfConfig":"34"},{"size":5567,"mtime":1611503187993,"results":"65","hashOfConfig":"34"},{"size":2701,"mtime":1611499946959,"results":"66","hashOfConfig":"34"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},"14ftb55",{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"69"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},"icbr0t",{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"69"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},"D:\\VS projects\\RussianStockLab\\RSLab.WebApp\\rslabui\\src\\index.js",[],["135","136"],"D:\\VS projects\\RussianStockLab\\RSLab.WebApp\\rslabui\\src\\store.js",[],"D:\\VS projects\\RussianStockLab\\RSLab.WebApp\\rslabui\\src\\services\\risStoreService.js",[],"D:\\VS projects\\RussianStockLab\\RSLab.WebApp\\rslabui\\src\\services\\configurationService.js",[],"D:\\VS projects\\RussianStockLab\\RSLab.WebApp\\rslabui\\src\\components\\app\\index.js",[],"D:\\VS projects\\RussianStockLab\\RSLab.WebApp\\rslabui\\src\\components\\error-boundry\\index.js",[],"D:\\VS projects\\RussianStockLab\\RSLab.WebApp\\rslabui\\src\\components\\ris-store-service-context\\index.js",[],"D:\\VS projects\\RussianStockLab\\RSLab.WebApp\\rslabui\\src\\helpers\\queryParameterHelper.js",[],"D:\\VS projects\\RussianStockLab\\RSLab.WebApp\\rslabui\\src\\constants\\urlQueryParameterNames.js",[],"D:\\VS projects\\RussianStockLab\\RSLab.WebApp\\rslabui\\src\\constants\\api.js",[],"D:\\VS projects\\RussianStockLab\\RSLab.WebApp\\rslabui\\src\\reducers\\index.js",[],"D:\\VS projects\\RussianStockLab\\RSLab.WebApp\\rslabui\\src\\components\\error-boundry\\error-boundry.js",[],"D:\\VS projects\\RussianStockLab\\RSLab.WebApp\\rslabui\\src\\components\\app\\App.js",[],"D:\\VS projects\\RussianStockLab\\RSLab.WebApp\\rslabui\\src\\components\\ris-store-service-context\\risStoreServiceContext.js",[],"D:\\VS projects\\RussianStockLab\\RSLab.WebApp\\rslabui\\src\\reducers\\risReducer.js",[],"D:\\VS projects\\RussianStockLab\\RSLab.WebApp\\rslabui\\src\\components\\pages\\risPage.js",[],"D:\\VS projects\\RussianStockLab\\RSLab.WebApp\\rslabui\\src\\components\\error-indicator\\index.js",[],"D:\\VS projects\\RussianStockLab\\RSLab.WebApp\\rslabui\\src\\constants\\actionsTypes.js",[],"D:\\VS projects\\RussianStockLab\\RSLab.WebApp\\rslabui\\src\\components\\ris-list\\index.js",[],"D:\\VS projects\\RussianStockLab\\RSLab.WebApp\\rslabui\\src\\components\\error-indicator\\error-indicator.js",[],"D:\\VS projects\\RussianStockLab\\RSLab.WebApp\\rslabui\\src\\components\\ris-list\\risList.js",["137","138"],"import React, { Component } from \"react\";\r\nimport { compose, bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRisStoreService } from \"../hoc\";\r\nimport Spinner from \"../spinner/spinner\";\r\nimport ErrorIndicator from \"../error-indicator/error-indicator\";\r\nimport PropTypes from \"prop-types\";\r\nimport cn from \"classnames\";\r\nimport st from \"./risList.module.scss\";\r\nimport { notify, fetchRisList } from \"../../actions\";\r\n\r\nconst RisList = ({ data, fetchRisList, notify, className }) => {\r\n  const refreshRisList = () => {\r\n    console.log(\"Обновить список справочников\");\r\n    fetchRisList();\r\n  };\r\n\r\n  const onRisListItemHeaderNotify = (level, message) => {\r\n    notify(level, message);\r\n  };\r\n\r\n  return (\r\n    <div className={cn(st.offers, className)}>\r\n      <div className={st.offersList}>Тут будет таблица</div>\r\n\r\n      <div className={st.offerContainer}></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nRisList.propTypes = {\r\n  data: PropTypes.arrayOf(PropTypes.object),\r\n  selectedRis: PropTypes.shape({\r\n    id: PropTypes.string,\r\n    comment: PropTypes.string,\r\n    title: PropTypes.string,\r\n  }),\r\n  className: PropTypes.string,\r\n\r\n  fetchRisValues: PropTypes.func,\r\n  onSelectRis: PropTypes.func,\r\n  createRis: PropTypes.func,\r\n  updateRis: PropTypes.func,\r\n  deleteRis: PropTypes.func,\r\n  onSelectRisItem: PropTypes.func,\r\n  createRisItem: PropTypes.func,\r\n  updateRisItem: PropTypes.func,\r\n  deleteRisItem: PropTypes.func,\r\n  notify: PropTypes.func,\r\n};\r\n\r\nRisList.defaultProps = {\r\n  className: \"\",\r\n  selectedRis: null,\r\n};\r\n\r\nclass RisListContainer extends Component {\r\n  componentDidMount() {\r\n    console.log(\"RisListContainer.componentDidMount()\");\r\n    this.props.fetchRisList();\r\n  }\r\n\r\n  render() {\r\n    const { data, isLoading, error, fetchRisList, notify } = this.props;\r\n\r\n    if (isLoading) {\r\n      return (\r\n        <div className={st.spin}>\r\n          <Spinner />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (error) {\r\n      return <ErrorIndicator />;\r\n    }\r\n\r\n    return <RisList data={data} fetchRisList={fetchRisList} notify={notify} />;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({\r\n  risReducer: { risListState, risItemActionState, risItemValueActionState },\r\n}) => {\r\n  const { isLoading, error, selectedRis, data } = risListState;\r\n  return {\r\n    data,\r\n    isLoading,\r\n    error,\r\n    selectedRis,\r\n    risItemActionState,\r\n    risItemValueActionState,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, { risStoreService }) => {\r\n  return bindActionCreators(\r\n    {\r\n      fetchRisList: fetchRisList(risStoreService),\r\n      notify: (level, message) => notify(level, message),\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nexport default compose(\r\n  withRisStoreService(),\r\n  connect(mapStateToProps, mapDispatchToProps)\r\n)(RisListContainer);\r\n","D:\\VS projects\\RussianStockLab\\RSLab.WebApp\\rslabui\\src\\components\\spinner\\spinner.js",[],"D:\\VS projects\\RussianStockLab\\RSLab.WebApp\\rslabui\\src\\components\\hoc\\index.js",[],"D:\\VS projects\\RussianStockLab\\RSLab.WebApp\\rslabui\\src\\actions\\index.js",[],"D:\\VS projects\\RussianStockLab\\RSLab.WebApp\\rslabui\\src\\constants\\notificationLevels.js",[],"D:\\VS projects\\RussianStockLab\\RSLab.WebApp\\rslabui\\src\\components\\common\\bottomPanel\\bottomPanel.js",[],["139","140"],"D:\\VS projects\\RussianStockLab\\RSLab.WebApp\\rslabui\\src\\components\\common\\focus\\focus.js",[],"D:\\VS projects\\RussianStockLab\\RSLab.WebApp\\rslabui\\src\\components\\common\\placeholder\\placeholder.jsx",[],"D:\\VS projects\\RussianStockLab\\RSLab.WebApp\\rslabui\\src\\components\\common\\acceptButtons\\acceptButtons.jsx",[],"D:\\VS projects\\RussianStockLab\\RSLab.WebApp\\rslabui\\src\\components\\hoc\\withRisStoreService.js",[],"D:\\VS projects\\RussianStockLab\\RSLab.WebApp\\rslabui\\src\\actions\\risActions.js",["141"],"import {\r\n    NOTIFY,\r\n    FETCH_RISLIST_SUCCESS,\r\n    FETCH_RISLIST_REQUEST,\r\n    SAVE_RIS_REQUEST,\r\n    SAVE_RIS_SUCCESS,\r\n    SAVE_RIS_FAILURE,\r\n    UPDATE_RIS_REQUEST,\r\n    UPDATE_RIS_SUCCESS,\r\n    UPDATE_RIS_FAILURE,\r\n    DELETE_RIS_REQUEST,\r\n    DELETE_RIS_SUCCESS,\r\n    DELETE_RIS_FAILURE,\r\n    FETCH_RISLIST_FAILURE,\r\n    FETCH_SELECTED_RIS_VALUES_REQUEST,\r\n    FETCH_SELECTED_RIS_VALUES_SUCCESS,\r\n    FETCH_SELECTED_RIS_VALUES_FAILURE\r\n} from \"../constants/actionsTypes\";\r\n\r\nimport NotificationManager from '../components/notification/NotificationManager';\r\nimport { WARNING, ERROR, INFO, SUCCESS } from '../constants/notificationLevels';\r\n\r\nconst getAction = (type, payload) => {\r\n    return {\r\n        type: type,\r\n        payload: payload\r\n    };\r\n};\r\n\r\nconst risListError = (error) => {\r\n    return {\r\n        type: FETCH_RISLIST_FAILURE,\r\n        payload: error,\r\n    };\r\n};\r\n\r\nconst risRequested = (risId) => {\r\n    return {\r\n        type: FETCH_SELECTED_RIS_VALUES_REQUEST,\r\n        payload: risId,\r\n    };\r\n};\r\n\r\nconst risLoaded = (data) => {\r\n    return {\r\n        type: FETCH_SELECTED_RIS_VALUES_SUCCESS,\r\n        payload: data,\r\n    };\r\n};\r\n\r\nconst risError = (error) => {\r\n    return {\r\n        type: FETCH_SELECTED_RIS_VALUES_FAILURE,\r\n        payload: error,\r\n    };\r\n};\r\n\r\n// Загрузка значений справочника\r\nconst fetchRisValues = (risStoreService) => (risId) => (dispatch) => {\r\n    dispatch(risRequested(risId));\r\n    risStoreService\r\n        .getRisValues(risId)\r\n        .then(data => dispatch(risLoaded(data)))\r\n        .catch(err => dispatch(risError(err)));\r\n};\r\n\r\n// Загрузка всех справочников\r\nconst fetchRisList = (risStoreService) => () => (dispatch) => {\r\n    dispatch(getAction(FETCH_RISLIST_REQUEST, null));\r\n    risStoreService\r\n        .getRisList()\r\n        .then((data) => dispatch(getAction(FETCH_RISLIST_SUCCESS, data)))\r\n        .catch((err) => dispatch(risListError(err)));\r\n};\r\n\r\n// Сохранение справочника\r\nconst createRis = (risStoreService) => (newRis) => (dispatch) => {\r\n    dispatch(getAction(SAVE_RIS_REQUEST, newRis));\r\n    risStoreService\r\n        .createRis(newRis)\r\n        .then(risId => {\r\n            dispatch(getAction(SAVE_RIS_SUCCESS, risId));\r\n            console.log('Справочник сохранен. Вызываем fetchRisList');\r\n            dispatch(fetchRisList(risStoreService)());\r\n            NotificationManager.Success('Справочник сохранен');\r\n        })\r\n        .catch(error => {\r\n            dispatch(getAction(SAVE_RIS_FAILURE, error.toString()));\r\n            const message = error.message === \"409\" ? \"Справочник c таким кодом уже существует\" : \"Серверная ошибка при создании справочника\";\r\n            NotificationManager.Error(message);\r\n        });\r\n};\r\n\r\n// Обновление справочника\r\nconst updateRis = (risStoreService) => (updatedRis) => (dispatch) => {\r\n    dispatch(getAction(UPDATE_RIS_REQUEST, updatedRis));\r\n    risStoreService\r\n        .updateRis(updatedRis)\r\n        .then(data => {\r\n            dispatch(getAction(UPDATE_RIS_SUCCESS, data));\r\n            console.log('Справочник обновлен. Вызываем fetchRisList');\r\n            dispatch(fetchRisList(risStoreService)());\r\n            NotificationManager.Success('Справочник обновлен');\r\n        })\r\n        .catch(error => {\r\n            dispatch(getAction(UPDATE_RIS_FAILURE, error.toString()));\r\n            const message = error.message === \"404\"\r\n                ? \"Cправочника c таким Id не существует\"\r\n                : error.message === \"409\"\r\n                    ? \"Cправочник c таким кодом уже существует\"\r\n                    : \"Серверная ошибка при обновлении элемента справочника\";\r\n            NotificationManager.Error(message);\r\n        });\r\n};\r\n\r\n// Удаление справочника\r\nconst deleteRis = (risStoreService) => (risId) => (dispatch) => {\r\n    dispatch(getAction(DELETE_RIS_REQUEST, risId));\r\n    risStoreService\r\n        .deleteRis(risId)\r\n        .then(risId => {\r\n            dispatch(getAction(DELETE_RIS_SUCCESS, risId));\r\n            console.log('Справочник удален. Вызываем fetchRisList');\r\n            dispatch(fetchRisList(risStoreService)());\r\n            NotificationManager.Success('Справочник удален');\r\n        })\r\n        .catch(error => {\r\n            dispatch(getAction(DELETE_RIS_FAILURE, error.toString()));\r\n            const message = error.message === \"404\" ? \"Справочник c таким Id не существует\" : \"Серверная ошибка при удалении справочника\";\r\n            NotificationManager.Error(message);\r\n        });\r\n};\r\n\r\nconst notify = (level, message) => (dispatch) => {\r\n    switch (level) {\r\n        case SUCCESS:\r\n            NotificationManager.Success(message);\r\n            break;\r\n\r\n        case INFO:\r\n            NotificationManager.Info(message);\r\n            break;\r\n\r\n        case WARNING:\r\n            NotificationManager.Warning(message);\r\n            break;\r\n\r\n        case ERROR:\r\n            NotificationManager.Error(message);\r\n            break;\r\n    }\r\n    dispatch(getAction(NOTIFY, null));\r\n}\r\n\r\nexport {\r\n    notify,\r\n    fetchRisList,\r\n    fetchRisValues,\r\n    createRis,\r\n    updateRis,\r\n    deleteRis,\r\n};\r\n","D:\\VS projects\\RussianStockLab\\RSLab.WebApp\\rslabui\\src\\components\\notification\\NotificationManager.js",[],{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","severity":1,"message":"147","line":13,"column":9,"nodeType":"148","messageId":"149","endLine":13,"endColumn":23},{"ruleId":"146","severity":1,"message":"150","line":18,"column":9,"nodeType":"148","messageId":"149","endLine":18,"endColumn":34},{"ruleId":"142","replacedBy":"151"},{"ruleId":"144","replacedBy":"152"},{"ruleId":"153","severity":1,"message":"154","line":135,"column":5,"nodeType":"155","messageId":"156","endLine":151,"endColumn":6},"no-native-reassign",["157"],"no-negated-in-lhs",["158"],"no-unused-vars","'refreshRisList' is assigned a value but never used.","Identifier","unusedVar","'onRisListItemHeaderNotify' is assigned a value but never used.",["157"],["158"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-global-assign","no-unsafe-negation"]